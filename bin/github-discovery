#! /usr/bin/env node

const program = require("commander");

const main = require("../lib/index");
const queryBuilder = require("../lib/queryBuilder");
const ranker = require("../lib/ranker");
 
program
  .version("0.0.1")
  .option("-t, --topic <n>", "filter on a topic")
  .option("-l, --language <l>", "filter repos by language")
  .option("-f, --forksIncluded", "include forks in the search")
  .option("-r, --recentlyUpdated", "only include repos that have been updated recently (last month)")
  .option("-m, --mitLicenseOnly", "only include repos that have an MIT license")
  .option("-c, --contribute", "only include repos that have contributing documentation")
  .option("-n, --notDeprecated", "exclude repos which might be deprecated")
  .parse(process.argv);

// Args
console.log("Specified filters: ")

if (program.language) {
    console.log("Language : " + program.language);  
} 

if (program.topic) {
    console.log("Topic : " + program.topic);
} 

if (program.forksIncluded) {
    console.log("ForksIncluded : " + program.forksIncluded);
} 

if (program.recentlyUpdated) {
    console.log("RecentlyUpdated : " + program.recentlyUpdated);
} 

if (program.mitLicenseOnly) {
    console.log("MitLicenseOnly : " + program.mitLicenseOnly);
} 

if (program.contribute) {
    console.log("Contribute : " + program.contribute);
} 

if (program.notDeprecated) {
    console.log("NotDeprecated : " + program.notDeprecated);
} 

var query = queryBuilder.buildQuery(
    program.topic, 
    program.language, 
    program.forksIncluded, 
    program.recentlyUpdated,
    program.mitLicenseOnly,
    program.contribute,
    program.notDeprecated
    );
console.log("Query = " + query);

main.run(query, false, function(items) {
    ranker.analyzeDistribution(
        items, function(repo) { return repo.forks_count}, "ForksCount");
});